globals [ p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12 odps points-flag ]

to set-points
  set points-flag false
  
  ;p1
  let xi rd ((total + width) / 2)
  let xf rd ((total + width) / 2 + swidth)
  let y max-pycor
  set p1 patches with [pxcor >= xi and pxcor <= xf and pycor = max-pycor]
  
  ;p2
  let yi rd ((total + height) / 2)
  let yf rd ((total + height) / 2 + swidth)
  let x max-pxcor
  set p2 patches with [pycor >= yi and pycor <= yf and pxcor = max-pxcor]
  
  ;p3
  set yi rd ((total - height) / 2 - swidth)
  set yf rd ((total - height) / 2)
  set x max-pxcor
  set p3 patches with [pycor >= yi and pycor <= yf and pxcor = max-pxcor]
  
  ;p4
  set xi rd ((total + width) / 2)
  set xf rd ((total + width) / 2 + swidth)
  set y min-pycor
  set p4 patches with [pxcor >= xi and pxcor <= xf and pycor = min-pycor]
  
  ;p5
  set xi rd ((total - width) / 2 - swidth)
  set xf rd ((total - width) / 2)
  set y min-pycor
  set p5 patches with [pxcor >= xi and pxcor <= xf and pycor = min-pycor]
  
  ;p6
  set yi rd ((total - height) / 2 - swidth)
  set yf rd ((total - height) / 2)
  set x min-pxcor
  set p6 patches with [pycor >= yi and pycor <= yf and pxcor = min-pxcor]
  
  ;p7
  set yi rd ((total + height) / 2)
  set yf rd ((total + height) / 2 + swidth)
  set x min-pxcor
  set p7 patches with [pycor >= yi and pycor <= yf and pxcor = min-pxcor]
  
  ;p8
  set xi rd ((total - width) / 2 - swidth)
  set xf rd ((total - width) / 2)
  set y max-pycor
  set p8 patches with [pxcor >= xi and pxcor <= xf and pycor = max-pycor]
  
  ;p9
  set xi rd ((total + width) / 2)
  set xf rd ((total + width) / 2 + swidth)
  set yi rd ((total + height) / 2)
  set yf rd ((total + height) / 2 + swidth)
  set p9 patches with [pxcor >= xi and pxcor <= xf and pycor >= yi and pycor <= yf]
  
  ;p10
  set xi rd ((total + width) / 2)
  set xf rd ((total + width) / 2 + swidth)
  set yi rd ((total - height) / 2 - swidth)
  set yf rd ((total - height) / 2)
  set p10 patches with [pxcor >= xi and pxcor <= xf and pycor >= yi and pycor <= yf]
  
  ;p11
  set xi rd ((total - width) / 2 - swidth)
  set xf rd ((total - width) / 2)
  set yi rd ((total - height) / 2 - swidth)
  set yf rd ((total - height) / 2)
  set p11 patches with [pxcor >= xi and pxcor <= xf and pycor >= yi and pycor <= yf]
  
  ;p12
  set xi rd ((total - width) / 2 - swidth)
  set xf rd ((total - width) / 2)
  set yi rd ((total + height) / 2)
  set yf rd ((total + height) / 2 + swidth)
  set p12 patches with [pxcor >= xi and pxcor <= xf and pycor >= yi and pycor <= yf]
  
  set odps (patch-set p1 p2 p3 p4 p5 p6 p7 p8 p9 p10 p11 p12) 
end

;this is a button
to points-on-off
  ifelse points-flag
  [ask odps [ set pcolor gray ] set points-flag false ]
  [ask odps [ set pcolor red ] set points-flag true ]
end

to-report select-trajectory [ current-patch ]
  ;r1, r2, r3, r4
  if member? current-patch (patch-set p1 p2)
  [ report one-of ( list 
    (list current-patch one-of p9 one-of p10 one-of (patch-set p3 p4)) 
    (list current-patch one-of p9 one-of p10 one-of p11 one-of (patch-set p5 p6))
    (list current-patch one-of p9 one-of p12 one-of (patch-set p7 p8)) 
    (list current-patch one-of p9 one-of p12 one-of p11 one-of (patch-set p5 p6))
    )
    ]
  
  ;r5, r6, r1i, r7
  if member? current-patch (patch-set p3 p4)
  [ report one-of ( list 
    (list current-patch one-of p10 one-of p11 one-of (patch-set p5 p6)) 
    (list current-patch one-of p10 one-of p11 one-of p12 one-of (patch-set p7 p8))
    (list current-patch one-of p10 one-of p9 one-of (patch-set p1 p2)) 
    (list current-patch one-of p10 one-of p9 one-of p12 one-of (patch-set p7 p8))
    )
    ]
  
  ;r8, r6i, r3i, r7i
  if member? current-patch (patch-set p7 p8)
  [ report one-of ( list 
    (list current-patch one-of p12 one-of p11 one-of (patch-set p5 p6)) 
    (list current-patch one-of p12 one-of p11 one-of p10 one-of (patch-set p3 p4))
    (list current-patch one-of p12 one-of p9 one-of (patch-set p1 p2)) 
    (list current-patch one-of p12 one-of p9 one-of p10 one-of (patch-set p3 p4))
    )
    ]  

  ;r8i, r3i, r5i, r4i
  if member? current-patch (patch-set p5 p6)
  [ report one-of ( list 
    (list current-patch one-of p11 one-of p12 one-of (patch-set p7 p8)) 
    (list current-patch one-of p11 one-of p10 one-of p9 one-of (patch-set p1 p2))
    (list current-patch one-of p11 one-of p10 one-of (patch-set p3 p4)) 
    (list current-patch one-of p11 one-of p12 one-of p9 one-of (patch-set p1 p2))
    )
    ]
end

to-report get-one-origin-point
  report one-of (patch-set p1 p2 p3 p4 p5 p6 p7 p8)
end